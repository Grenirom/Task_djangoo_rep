cp
Используйте команду cp для копирования файлов из текущего каталога в другой каталог. Например

cp scenery.jpg/home/username/Pictures
# создаст копию scenery.jpg (из вашего текущего каталога) в каталог Pictures 



locate
Используйте эту команду, чтобы найти нужный вам файл. Она работает, как команда поиска в Windows. Более того, аргумент -i сделает команду нечувствительной к регистру, благодаря чему вы сможете искать файлы, даже если вы не помните их точные названия.

Чтобы найти файл, содержащий два или более слов, используйте звёздочку (*).

locate -i school*note 
# будет искать любой файл, содержащий слова «school» и «note», не зависимо от того написаны они с большой или маленькой буквы 


find
Подобно команде locate, find также выполняет поиск файлов и каталогов. Разница в том, что команда find используется для поиска файлов в текущем каталоге.

find/home/-name notes.txt
#будет искать файл с именем notes.txt в домашнем каталоге и его подкаталогах 
Другие варианты использования команды Linux find:

Для поиска файлов в текущем каталоге используйте find . -name notes.txt
Для поиска каталогов используйте find / -type d -name notes. txt

ls -l test.txt - Вывод объема занимаемого каким то файлом
НАПРИМЕР: ls -l test.txt	

exit - закрывает терминал

Чтобы создать директорию в другой папке(не переходя в нее изначально) используй:
mkdir tt/ttt  -  это создаст новую директорию в папке tt

Чтобы создать файл в какой то папке не переходя в нее изначально используй:
touch tt/test.py



cоздайте директорию my_dir и сразу же перейдите в нее после чего создайте в ней файл my_file.py
&& используется для связки двух команд сразу

mkdir my_dir && cd my_dir
touch my_file.py



чтобы добавить нового пользователя в систему используется команда:
useradd
на данный момент вводя это в терминале выдается ошибка, попробую исправить потом


 есть 3 команды чтобы получить все переменные окружения/оболочки:
set - показывает все переменные оболочки
export - так-же показывает все переменные, еще добавляет новую переменную в окружение
env - показывает все переменные окружения, но в более чистом виде


ctrl + c -- остановка любого определенного процесса в терминале


ps - команда для вывода всех запущенных процессов


!! - используется для введения последней введенной команды












